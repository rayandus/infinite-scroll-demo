{"version":3,"sources":["app/components/shared/CustomSnackbar.js","app/components/shared/SplashScreen.js","store/reducers/routes.reducer.js","store/reducers/index.js","store/index.js","store/withReducer.js","app/components/users/UserItem.js","app/components/users/UsersList.js","app/constants/users/users.constants.js","app/components/users/api/UsersApi.js","app/components/users/store/actions/users.actions.js","app/constants/users/users.actionTypes.js","app/components/users/store/reducers/users.reducer.js","app/components/users/store/reducers/index.js","app/components/users/UsersApp.js","app/components/layout/HeaderBar.js","app/constants/constants.js","app/components/layout/SideBar.js","app/components/layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Alert","props","elevation","variant","CustomSnackbar","open","anchorOrigin","autoHideDuration","severity","message","useState","isOpen","setIsOpen","useEffect","handleClose","event","reason","Snackbar","onClose","defaultProps","vertical","horizontal","useStyles","makeStyles","splashPanel","position","top","left","transform","splashIcon","display","width","height","background","borderRadius","textAlign","fontSize","color","lineHeight","pulsing","content","boxShadow","transition","animation","opacity","logo","SplashScreen","classes","className","clsx","src","alt","initialState","static","routes","state","action","type","createReducer","asyncReducers","combineReducers","reduxModule","REPLACE","store","createStore","applyMiddleware","thunk","withReducer","key","reducer","WrappedComponent","replaceReducer","injectReducer","Consumer","React","PureComponent","UserItem","isSkeleton","data","ListItem","button","divider","Grid","container","direction","justify","alignItems","spacing","item","Skeleton","Avatar","avatar","style","xs","Typography","first_name","last_name","email","UsersList","total","users","isLoading","remainingCount","List","_","map","keys","id","user","range","instance","getUsers","params","apiURL","process","Promise","resolve","reject","axios","get","then","response","catch","error","pageSize","Date","getTime","request","UsersApi","dispatch","payload","Error","list","isLastPage","usersReducer","d","keyBy","page","total_pages","UsersApp","handleFetchData","setState","showReload","getLoader","loader","Button","onClick","textTransform","size","marginRight","CircularProgress","margin","padding","this","dataLength","next","hasMore","endMessage","Component","connect","usersApp","bindActionCreators","actions","theme","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","appBarTitle","flexGrow","align","placeHolder","HeaderBar","onDrawerOpen","AppBar","Toolbar","IconButton","aria-label","edge","noWrap","drawer","drawerPaper","drawerHeader","mixins","toolbar","justifyContent","SideBar","useTheme","Drawer","anchor","paper","ModalProps","onBackdropClick","Divider","ListItemIcon","ListItemText","primary","Layout","handleDrawerOpen","isDrawerOpen","handleDrawerClose","showSplashScreen","setTimeout","root","contentShift","withStyles","withTheme","App","Provider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.603b3965.chunk.js","sourcesContent":["/* eslint-disable import/no-unresolved */\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = (props) => {\r\n  // eslint-disable-next-line react/jsx-props-no-spreading\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst CustomSnackbar = ({\r\n  open,\r\n  anchorOrigin,\r\n  autoHideDuration,\r\n  severity,\r\n  message,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open);\r\n  }, [open]);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') return;\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={isOpen}\r\n      autoHideDuration={autoHideDuration}\r\n      anchorOrigin={anchorOrigin}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert onClose={handleClose} severity={severity}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nCustomSnackbar.propTypes = {\r\n  open            : PropTypes.bool,\r\n  anchorOrigin    : PropTypes.oneOfType([PropTypes.object]),\r\n  autoHideDuration: PropTypes.number,\r\n  severity        : PropTypes.string,\r\n  message         : PropTypes.string,\r\n};\r\n\r\nCustomSnackbar.defaultProps = {\r\n  open            : false,\r\n  anchorOrigin    : { vertical: 'top', horizontal: 'center' },\r\n  autoHideDuration: 6000,\r\n  severity        : 'info',\r\n  message         : '',\r\n};\r\n\r\nexport default CustomSnackbar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => {\r\n  return {\r\n    splashPanel: {\r\n      position : 'fixed',\r\n      top      : '50%',\r\n      left     : '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n    splashIcon: {\r\n      display     : 'inline-block',\r\n      width       : '20px',\r\n      height      : '20px',\r\n      background  : '#7fb900',\r\n      borderRadius: '50%',\r\n      textAlign   : 'center',\r\n      fontSize    : '30px',\r\n      color       : '#000',\r\n      lineHeight  : '50px',\r\n    },\r\n    pulsing: {\r\n      '&:before,&:after': {\r\n        position    : 'absolute',\r\n        top         : '-65px',\r\n        left        : '-65px',\r\n        width       : '150px',\r\n        height      : '150px',\r\n        borderRadius: '50%',\r\n        content     : '\"\"',\r\n        boxShadow   : 'inset 0 0 0 50px #7fb900',\r\n        transition  : 'transform 0.2s, opacity 0.2s',\r\n        animation   : '$pulsing 1.25s infinite',\r\n      },\r\n      '&:after': {\r\n        animation: '$pulsing 1.5s infinite',\r\n      },\r\n    },\r\n    '@keyframes pulsing': {\r\n      '0%': {\r\n        transform: 'scale(0)',\r\n        opacity  : '0.5',\r\n      },\r\n      '100%': {\r\n        transform: 'scale(1.5)',\r\n        opacity  : '0',\r\n      },\r\n    },\r\n    logo: {\r\n      position: 'absolute',\r\n      top     : '-40px',\r\n      left    : '-40px',\r\n    },\r\n  };\r\n});\r\n\r\nconst SplashScreen = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.splashPanel}>\r\n      <div className={clsx(classes.splashIcon, classes.pulsing)} />\r\n      <img className={classes.logo} width=\"100\" src=\"assets/images/logos/aoe.png\" alt=\"logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n","const initialState = {\r\n  static: 'static',\r\n};\r\n\r\nconst routes = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    default:\r\n    {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default routes;\r\n","import { combineReducers } from 'redux';\r\nimport routes from './routes.reducer';\r\n\r\nconst createReducer = (asyncReducers) => {\r\n  return combineReducers({\r\n    routes,\r\n    ...asyncReducers,\r\n  });\r\n};\r\n\r\nexport default createReducer;\r\n","/* eslint-disable import/extensions */\r\n/* eslint-disable import/no-duplicates */\r\nimport * as reduxModule from 'redux';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport createReducer from './reducers';\r\n\r\n/*\r\nFix for Firefox redux dev tools extension\r\nhttps://github.com/zalmoxisus/redux-devtools-instrument/pull/19#issuecomment-400637274\r\n */\r\n// eslint-disable-next-line no-underscore-dangle\r\nreduxModule.__DO_NOT_USE__ActionTypes.REPLACE = '@@redux/INIT';\r\n\r\nconst store = createStore(createReducer(), applyMiddleware(thunk));\r\n\r\nstore.asyncReducers = {};\r\n\r\nexport const injectReducer = (key, reducer) => {\r\n  if (store.asyncReducers[key]) {\r\n    return;\r\n  }\r\n  store.asyncReducers[key] = reducer;\r\n  store.replaceReducer(createReducer(store.asyncReducers));\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  return store;\r\n};\r\n\r\nexport default store;\r\n","/* eslint-disable import/no-unresolved */\r\nimport React from 'react';\r\nimport { injectReducer } from 'store';\r\nimport { ReactReduxContext } from 'react-redux';\r\n\r\nconst withReducer = (key, reducer) => {\r\n  return (WrappedComponent) => {\r\n    return class extends React.PureComponent {\r\n      constructor(props) {\r\n        super(props);\r\n        injectReducer(key, reducer);\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <ReactReduxContext.Consumer>\r\n            {() => {\r\n              // return storeState && storeState[key] ? <WrappedComponent {...this.props} /> : null;\r\n              // To Do: Expected to check storeState\r\n              // eslint-disable-next-line react/jsx-props-no-spreading\r\n              return <WrappedComponent {...this.props} />;\r\n            }}\r\n          </ReactReduxContext.Consumer>\r\n        );\r\n      }\r\n    };\r\n  };\r\n};\r\n\r\nexport default withReducer;\r\n","/* eslint-disable import/no-unresolved */\r\nimport React from 'react';\r\nimport {\r\n  ListItem,\r\n  Grid,\r\n  Avatar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserItem = ({\r\n  isSkeleton,\r\n  data,\r\n}) => {\r\n  return (\r\n    <ListItem\r\n      button\r\n      divider\r\n    >\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          {\r\n            isSkeleton\r\n              ? <Skeleton variant=\"circle\" width={65} height={65} />\r\n              : <Avatar src={data.avatar} style={{ width: 65, height: 65 }} />\r\n          }\r\n        </Grid>\r\n        <Grid item xs>\r\n          {\r\n            isSkeleton\r\n              ? (\r\n                <>\r\n                  <Skeleton variant=\"text\" height={30} animation=\"wave\" />\r\n                  <Skeleton variant=\"text\" height={20} width={200} animation=\"wave\" />\r\n                </>\r\n              )\r\n              : (\r\n                <>\r\n                  <Typography variant=\"subtitle1\">{`${data.first_name} ${data.last_name}`}</Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">{data.email}</Typography>\r\n                </>\r\n              )\r\n          }\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  data      : PropTypes.oneOfType([PropTypes.object]),\r\n  isSkeleton: PropTypes.bool,\r\n};\r\n\r\nUserItem.defaultProps = {\r\n  data      : {},\r\n  isSkeleton: false,\r\n};\r\n\r\nexport default UserItem;\r\n","/* eslint-disable import/no-unresolved */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  List,\r\n} from '@material-ui/core';\r\nimport { PAGE_SIZE } from 'app/constants/users/users.constants';\r\nimport _ from 'lodash';\r\nimport UserItem from './UserItem';\r\n\r\nconst UsersList = ({\r\n  total,\r\n  users,\r\n  isLoading,\r\n}) => {\r\n  const remainingCount = (total ? total - PAGE_SIZE : PAGE_SIZE);\r\n\r\n  return (\r\n    <>\r\n      <List>\r\n        {_.map(_.keys(users), (id) => {\r\n          const user = users[id];\r\n          return (\r\n            <UserItem\r\n              key={id}\r\n              id={id}\r\n              data={user}\r\n            />\r\n          );\r\n        })}\r\n        {isLoading && _.map(_.range(remainingCount), (id) => {\r\n          return (\r\n            <UserItem\r\n              key={`skltn-${id}`}\r\n              isSkeleton\r\n            />\r\n          );\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\n\r\nUsersList.propTypes = {\r\n  total    : PropTypes.number,\r\n  users    : PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nUsersList.defaultProps = {\r\n  total    : 0,\r\n  users    : [],\r\n  isLoading: false,\r\n};\r\n\r\nexport default UsersList;\r\n","export const PAGE_SIZE = 10;\r\nexport default false;\r\n","/* eslint-disable import/no-unresolved */\r\nimport axios from 'axios';\r\n\r\nclass UsersApi {\r\n    getUsers = (params) => {\r\n      const apiURL = `${process.env.REACT_APP_USERS_API_URL}api/users${params}`;\r\n\r\n      return new Promise((resolve, reject) => {\r\n        axios.get(apiURL).then((response) => {\r\n          resolve(response.data);\r\n        }).catch((error) => {\r\n          if (error.response) {\r\n            reject(error.response.data);\r\n          }\r\n          reject(error);\r\n        });\r\n      });\r\n    }\r\n}\r\n\r\nconst instance = new UsersApi();\r\n\r\nexport default instance;\r\n","/* eslint-disable import/no-unresolved */\r\nimport * as actionType from 'app/constants/users/users.actionTypes';\r\nimport { PAGE_SIZE } from 'app/constants/users/users.constants';\r\nimport UsersApi from '../../api/UsersApi';\r\n\r\nexport function getUsers(pageSize = PAGE_SIZE) {\r\n  const params = `?per_page=${pageSize}`\r\n               // Simulation to slow API response\r\n               + '&delay=3'\r\n               // Quick fix to caching\r\n               + `&nocache=${new Date().getTime()}`;\r\n\r\n  const request = UsersApi.getUsers(params);\r\n\r\n  return (dispatch) => {\r\n    return request.then((response) => {\r\n      dispatch({\r\n        type   : actionType.USERS_GET_LIST,\r\n        payload: {\r\n          data: response,\r\n        },\r\n      });\r\n      return Promise.resolve(); // add param if needed\r\n    })\r\n      .catch((error) => {\r\n        return Promise.reject(new Error(error));\r\n      });\r\n  };\r\n}\r\n\r\nexport function clearStore() {\r\n  return {\r\n    type: actionType.USERS_CLEAR_STORE,\r\n  };\r\n}\r\n","// users action types\r\nexport const USERS_GET_LIST = 'USERS_GET_LIST';\r\nexport const USERS_CLEAR_STORE = 'USERS_CLEAR_STORE';\r\nexport const USERS_ERROR = 'USERS_ERROR';\r\n","/* eslint-disable import/no-unresolved */\r\nimport * as actionType from 'app/constants/users/users.actionTypes';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n  list      : [],\r\n  total     : 0,\r\n  isLastPage: false,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionType.USERS_GET_LIST:\r\n    {\r\n      const d = action.payload.data;\r\n\r\n      return {\r\n        ...state,\r\n        list      : _.keyBy(d.data, 'id'),\r\n        total     : d.total,\r\n        isLastPage: d.page >= d.total_pages,\r\n      };\r\n    }\r\n    case actionType.USERS_CLEAR_STORE:\r\n    {\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      };\r\n    }\r\n    default:\r\n    {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n","import { combineReducers } from 'redux';\r\nimport users from './users.reducer';\r\n\r\nconst reducer = combineReducers({\r\n  users,\r\n});\r\n\r\nexport default reducer;\r\n","/* eslint-disable react/prefer-stateless-function */\r\n/* eslint-disable import/no-unresolved */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withReducer from 'store/withReducer';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { CustomSnackbar } from 'app/components/shared';\r\nimport { PAGE_SIZE } from 'app/constants/users/users.constants';\r\nimport UsersList from './UsersList';\r\nimport * as actions from './store/actions';\r\nimport reducer from './store/reducers';\r\n\r\nclass UsersApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading : true,\r\n      pageSize  : 0,\r\n      showReload: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getUsers } = this.props;\r\n    getUsers()\r\n      .then(() => {\r\n        this.setState({\r\n          isLoading : false,\r\n          pageSize  : PAGE_SIZE,\r\n          showReload: false,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ showReload: true });\r\n      });\r\n  }\r\n\r\n  handleFetchData = () => {\r\n    const { getUsers } = this.props;\r\n    const { pageSize } = this.state;\r\n\r\n    this.setState({ isLoading: true, showReload: false });\r\n    getUsers(pageSize + PAGE_SIZE)\r\n      .then(() => {\r\n        this.setState({\r\n          isLoading : false,\r\n          pageSize  : pageSize + PAGE_SIZE,\r\n          showReload: false,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ showReload: true });\r\n      });\r\n  };\r\n\r\n  getLoader = (isLoading, showReload) => {\r\n    let loader = null;\r\n\r\n    if (showReload) {\r\n      loader = (\r\n        <Button\r\n          variant=\"text\"\r\n          onClick={this.handleFetchData}\r\n          style={{ textTransform: 'none' }}\r\n        >\r\n          <AutorenewIcon size={15} style={{ marginRight: '0.5rem' }} />\r\n          Something went wrong. Try again.\r\n        </Button>\r\n      );\r\n    } else if (isLoading) {\r\n      loader = (\r\n        <>\r\n          <CircularProgress size={15} style={{ marginRight: '0.5rem' }} />\r\n          Patience is a virtue. Fetching more users.\r\n        </>\r\n      );\r\n    }\r\n\r\n    return loader && <div style={{ margin: '1rem 1rem 0 1rem', padding: '1rem' }}>{loader}</div>;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLastPage,\r\n      users,\r\n      total,\r\n    } = this.props;\r\n    const {\r\n      isLoading,\r\n      showReload,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <InfiniteScroll\r\n          dataLength={pageSize}\r\n          next={this.handleFetchData}\r\n          hasMore={!isLastPage}\r\n          loader={this.getLoader(isLoading, showReload, isLastPage)}\r\n          endMessage={<div style={{ margin: '1rem 1rem 0 1rem', padding: '1rem' }}>That&apos;s all we got!</div>}\r\n        >\r\n          <UsersList\r\n            total={total}\r\n            users={users}\r\n            isLoading={isLoading}\r\n          />\r\n        </InfiniteScroll>\r\n        <CustomSnackbar\r\n          open={showReload}\r\n          severity=\"error\"\r\n          message=\"Something went wrong. Please try again later.\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nUsersApp.propTypes = {\r\n  getUsers  : PropTypes.func,\r\n  users     : PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  isLastPage: PropTypes.bool,\r\n  total     : PropTypes.number,\r\n};\r\n\r\nUsersApp.defaultProps = {\r\n  getUsers  : () => {},\r\n  users     : [],\r\n  isLastPage: false,\r\n  total     : 0,\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators({\r\n    getUsers: actions.getUsers,\r\n  }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({ usersApp }) {\r\n  return {\r\n    users     : usersApp.users.list,\r\n    isLastPage: usersApp.users.isLastPage,\r\n    total     : usersApp.users.total,\r\n  };\r\n}\r\n\r\nexport default withReducer('usersApp', reducer)(\r\n  connect(mapStateToProps, mapDispatchToProps)(UsersApp),\r\n);\r\n","/* eslint-disable import/no-unresolved */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { DRAWER_WIDTH } from 'app/constants/constants';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing  : theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width     : `calc(100% - ${DRAWER_WIDTH}px)`,\r\n      marginLeft: DRAWER_WIDTH,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing  : theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    appBarTitle: {\r\n      flexGrow: 1,\r\n      align   : 'center',\r\n    },\r\n    placeHolder: {\r\n      width: '2.5em',\r\n    },\r\n  };\r\n});\r\n\r\nconst HeaderBar = ({\r\n  onDrawerOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={classes.appBar}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={onDrawerOpen}\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography className={classes.appBarTitle} variant=\"h6\" noWrap>\r\n          List\r\n        </Typography>\r\n        <div className={classes.placeHolder} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nHeaderBar.propTypes = {\r\n  onDrawerOpen: PropTypes.func,\r\n};\r\n\r\nHeaderBar.defaultProps = {\r\n  onDrawerOpen: () => {},\r\n};\r\n\r\nexport default HeaderBar;\r\n","export const USER_LIST_LIMIT = 10;\r\nexport const DRAWER_WIDTH = 240;\r\n","/* eslint-disable import/no-unresolved */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport {\r\n  Drawer,\r\n  List,\r\n  Divider,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { DRAWER_WIDTH } from 'app/constants/constants';\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  return {\r\n    drawer: {\r\n      // width     : DRAWER_WIDTH,\r\n      // flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: DRAWER_WIDTH,\r\n    },\r\n    drawerHeader: {\r\n      display       : 'flex',\r\n      alignItems    : 'center',\r\n      padding       : theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n  };\r\n});\r\n\r\nconst SideBar = ({\r\n  onClose,\r\n  isOpen,\r\n}) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      anchor=\"left\"\r\n      open={isOpen}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n      ModalProps={{ onBackdropClick: onClose }}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={onClose}>\r\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <InfoIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"About\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nSideBar.propTypes = {\r\n  onClose: PropTypes.func,\r\n  isOpen : PropTypes.bool,\r\n};\r\n\r\nSideBar.defaultProps = {\r\n  onClose: () => {},\r\n  isOpen : false,\r\n};\r\n\r\nexport default SideBar;\r\n","/* eslint-disable import/no-unresolved */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { SplashScreen } from 'app/components/shared';\r\nimport UsersApp from 'app/components/users/UsersApp';\r\nimport HeaderBar from './HeaderBar';\r\nimport SideBar from './SideBar';\r\n\r\nconst styles = (theme) => {\r\n  return {\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    drawerHeader: {\r\n      display       : 'flex',\r\n      alignItems    : 'center',\r\n      padding       : theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow  : 1,\r\n      padding   : theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing  : theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      // marginLeft: -DRAWER_WIDTH,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing  : theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  };\r\n};\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isDrawerOpen    : false,\r\n      showSplashScreen: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ showSplashScreen: false });\r\n    }, 3000);\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ isDrawerOpen: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ isDrawerOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isDrawerOpen,\r\n      showSplashScreen,\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      showSplashScreen\r\n        ? <SplashScreen />\r\n        : (\r\n          <div className={classes.root}>\r\n            <HeaderBar onDrawerOpen={this.handleDrawerOpen} isDrawerOpen={isDrawerOpen} />\r\n            <SideBar onClose={this.handleDrawerClose} isOpen={isDrawerOpen} />\r\n            <main\r\n              className={clsx(classes.content, {\r\n                [classes.contentShift]: isDrawerOpen,\r\n              })}\r\n            >\r\n              <div className={classes.drawerHeader} />\r\n              <UsersApp />\r\n            </main>\r\n          </div>\r\n        )\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  classes: PropTypes.oneOfType([PropTypes.object]),\r\n};\r\n\r\nLayout.defaultProps = {\r\n  classes: {},\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Layout);\r\n","/* eslint-disable import/no-unresolved */\n/* eslint-disable import/extensions */\nimport React from 'react';\nimport Provider from 'react-redux/es/components/Provider';\nimport { Layout } from 'app/components/layout';\nimport store from './store';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Layout />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}